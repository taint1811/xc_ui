{"version":3,"file":"scrollspy.js","sources":["../src/util/index.js","../src/scrollspy.js"],"sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.3.1): util/index.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nconst MAX_UID = 1000000\nconst MILLISECONDS_MULTIPLIER = 1000\nconst TRANSITION_END = 'transitionend'\n\n// Shoutout AngusCroll (https://goo.gl/pxwQGp)\nconst toType = obj => ({}.toString.call(obj).match(/\\s([a-z]+)/i)[1].toLowerCase())\n\n/**\n * --------------------------------------------------------------------------\n * Public Util Api\n * --------------------------------------------------------------------------\n */\n\nconst getUID = prefix => {\n  do {\n    prefix += ~~(Math.random() * MAX_UID) // \"~~\" acts like a faster Math.floor() here\n  } while (document.getElementById(prefix))\n\n  return prefix\n}\n\nconst getSelector = element => {\n  let selector = element.getAttribute('data-target')\n\n  if (!selector || selector === '#') {\n    const hrefAttr = element.getAttribute('href')\n\n    selector = hrefAttr && hrefAttr !== '#' ? hrefAttr.trim() : null\n  }\n\n  return selector\n}\n\nconst getSelectorFromElement = element => {\n  const selector = getSelector(element)\n\n  if (selector) {\n    return document.querySelector(selector) ? selector : null\n  }\n\n  return null\n}\n\nconst getElementFromSelector = element => {\n  const selector = getSelector(element)\n\n  return selector ? document.querySelector(selector) : null\n}\n\nconst getTransitionDurationFromElement = element => {\n  if (!element) {\n    return 0\n  }\n\n  // Get transition-duration of the element\n  let {\n    transitionDuration,\n    transitionDelay\n  } = window.getComputedStyle(element)\n\n  const floatTransitionDuration = parseFloat(transitionDuration)\n  const floatTransitionDelay = parseFloat(transitionDelay)\n\n  // Return 0 if element or transition duration is not found\n  if (!floatTransitionDuration && !floatTransitionDelay) {\n    return 0\n  }\n\n  // If multiple durations are defined, take the first\n  transitionDuration = transitionDuration.split(',')[0]\n  transitionDelay = transitionDelay.split(',')[0]\n\n  return (parseFloat(transitionDuration) + parseFloat(transitionDelay)) * MILLISECONDS_MULTIPLIER\n}\n\nconst triggerTransitionEnd = element => {\n  const evt = document.createEvent('HTMLEvents')\n\n  evt.initEvent(TRANSITION_END, true, true)\n  element.dispatchEvent(evt)\n}\n\nconst isElement = obj => (obj[0] || obj).nodeType\n\nconst emulateTransitionEnd = (element, duration) => {\n  let called = false\n  const durationPadding = 5\n  const emulatedDuration = duration + durationPadding\n  function listener() {\n    called = true\n    element.removeEventListener(TRANSITION_END, listener)\n  }\n\n  element.addEventListener(TRANSITION_END, listener)\n  setTimeout(() => {\n    if (!called) {\n      triggerTransitionEnd(element)\n    }\n  }, emulatedDuration)\n}\n\nconst typeCheckConfig = (componentName, config, configTypes) => {\n  Object.keys(configTypes)\n    .forEach(property => {\n      const expectedTypes = configTypes[property]\n      const value = config[property]\n      const valueType = value && isElement(value) ?\n        'element' :\n        toType(value)\n\n      if (!new RegExp(expectedTypes).test(valueType)) {\n        throw new Error(\n          `${componentName.toUpperCase()}: ` +\n          `Option \"${property}\" provided type \"${valueType}\" ` +\n          `but expected type \"${expectedTypes}\".`)\n      }\n    })\n}\n\nconst makeArray = nodeList => {\n  if (!nodeList) {\n    return []\n  }\n\n  return [].slice.call(nodeList)\n}\n\nconst isVisible = element => {\n  if (!element) {\n    return false\n  }\n\n  if (element.style && element.parentNode && element.parentNode.style) {\n    const elementStyle = getComputedStyle(element)\n    const parentNodeStyle = getComputedStyle(element.parentNode)\n\n    return elementStyle.display !== 'none' &&\n      parentNodeStyle.display !== 'none' &&\n      elementStyle.visibility !== 'hidden'\n  }\n\n  return false\n}\n\nconst findShadowRoot = element => {\n  if (!document.documentElement.attachShadow) {\n    return null\n  }\n\n  // Can find the shadow root otherwise it'll return the document\n  if (typeof element.getRootNode === 'function') {\n    const root = element.getRootNode()\n    return root instanceof ShadowRoot ? root : null\n  }\n\n  if (element instanceof ShadowRoot) {\n    return element\n  }\n\n  // when we don't find a shadow root\n  if (!element.parentNode) {\n    return null\n  }\n\n  return findShadowRoot(element.parentNode)\n}\n\nconst noop = () => function () {}\n\nconst reflow = element => element.offsetHeight\n\nconst getjQuery = () => {\n  const { jQuery } = window\n\n  if (jQuery && !document.body.hasAttribute('data-no-jquery')) {\n    return jQuery\n  }\n\n  return null\n}\n\nexport {\n  getjQuery,\n  TRANSITION_END,\n  getUID,\n  getSelectorFromElement,\n  getElementFromSelector,\n  getTransitionDurationFromElement,\n  triggerTransitionEnd,\n  isElement,\n  emulateTransitionEnd,\n  typeCheckConfig,\n  makeArray,\n  isVisible,\n  findShadowRoot,\n  noop,\n  reflow\n}\n","/**\n * --------------------------------------------------------------------------\n * This component is a modified version of the Bootstrap's scrollspy.js\n * Bootstrap (v4.3.1): scrollspy.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport {\n    getjQuery,\n    getSelectorFromElement,\n    getUID,\n    makeArray,\n    typeCheckConfig\n} from './util/index'\nimport Data from './dom/data'\nimport EventHandler from './dom/event-handler'\nimport Manipulator from './dom/manipulator'\nimport SelectorEngine from './dom/selector-engine'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME = 'scrollspy'\nconst VERSION = '1.0.0'\nconst DATA_KEY = 'xcodiui.scrollspy'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\n\nconst Default = {\n    offset: 10,\n    method: 'auto',\n    target: ''\n}\n\nconst DefaultType = {\n    offset: 'number',\n    method: 'string',\n    target: '(string|element)'\n}\n\nconst Event = {\n    ACTIVATE: `activate${EVENT_KEY}`,\n    SCROLL: `scroll${EVENT_KEY}`,\n    LOAD_DATA_API: `load${EVENT_KEY}${DATA_API_KEY}`\n}\n\nconst ClassName = {\n    DROPDOWN_ITEM: 'dropdown-item',\n    ACTIVE: 'active'\n}\n\nconst Selector = {\n    DATA_SPY: '[data-spy=\"scroll\"]',\n    NAV_LIST_GROUP: '.nav, .list-group',\n    NAV_LINKS: '.nav-link',\n    NAV_ITEMS: '.nav-item',\n    LIST_ITEMS: '.list-group-item',\n    DROPDOWN: '.dropdown',\n    DROPDOWN_TOGGLE: '.dropdown-toggle'\n}\n\nconst OffsetMethod = {\n    OFFSET: 'offset',\n    POSITION: 'position'\n}\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass ScrollSpy {\n    constructor(element, config) {\n        this._element = element\n        this._scrollElement = element.tagName === 'BODY' ? window : element\n        this._config = this._getConfig(config)\n        this._selector = `${this._config.target} ${Selector.NAV_LINKS},` +\n            `${this._config.target} ${Selector.LIST_ITEMS},` +\n            `${this._config.target} .${ClassName.DROPDOWN_ITEM}`\n        this._offsets = []\n        this._targets = []\n        this._activeTarget = null\n        this._scrollHeight = 0\n\n        EventHandler.on(this._scrollElement, Event.SCROLL, event => this._process(event))\n\n        this.refresh()\n        this._process()\n\n        Data.setData(element, DATA_KEY, this)\n    }\n\n    // Getters\n\n    static get VERSION() {\n        return VERSION\n    }\n\n    static get Default() {\n        return Default\n    }\n\n    // Public\n\n    refresh() {\n        const autoMethod = this._scrollElement === this._scrollElement.window ?\n            OffsetMethod.OFFSET :\n            OffsetMethod.POSITION\n\n        const offsetMethod = this._config.method === 'auto' ?\n            autoMethod :\n            this._config.method\n\n        const offsetBase = offsetMethod === OffsetMethod.POSITION ?\n            this._getScrollTop() :\n            0\n\n        this._offsets = []\n        this._targets = []\n\n        this._scrollHeight = this._getScrollHeight()\n\n        const targets = makeArray(SelectorEngine.find(this._selector))\n\n        targets\n            .map(element => {\n                let target\n                const targetSelector = getSelectorFromElement(element)\n\n                if (targetSelector) {\n                    target = SelectorEngine.findOne(targetSelector)\n                }\n\n                if (target) {\n                    const targetBCR = target.getBoundingClientRect()\n                    if (targetBCR.width || targetBCR.height) {\n                        return [\n                            Manipulator[offsetMethod](target).top + offsetBase,\n                            targetSelector\n                        ]\n                    }\n                }\n\n                return null\n            })\n            .filter(item => item)\n            .sort((a, b) => a[0] - b[0])\n            .forEach(item => {\n                this._offsets.push(item[0])\n                this._targets.push(item[1])\n            })\n    }\n\n    dispose() {\n        Data.removeData(this._element, DATA_KEY)\n        EventHandler.off(this._scrollElement, EVENT_KEY)\n\n        this._element = null\n        this._scrollElement = null\n        this._config = null\n        this._selector = null\n        this._offsets = null\n        this._targets = null\n        this._activeTarget = null\n        this._scrollHeight = null\n    }\n\n    // Private\n\n    _getConfig(config) {\n        config = {\n            ...Default,\n            ...typeof config === 'object' && config ? config : {}\n        }\n\n        if (typeof config.target !== 'string') {\n            let { id } = config.target\n            if (!id) {\n                id = getUID(NAME)\n                config.target.id = id\n            }\n\n            config.target = `#${id}`\n        }\n\n        typeCheckConfig(NAME, config, DefaultType)\n\n        return config\n    }\n\n    _getScrollTop() {\n        return this._scrollElement === window ?\n            this._scrollElement.pageYOffset :\n            this._scrollElement.scrollTop\n    }\n\n    _getScrollHeight() {\n        return this._scrollElement.scrollHeight || Math.max(\n            document.body.scrollHeight,\n            document.documentElement.scrollHeight\n        )\n    }\n\n    _getOffsetHeight() {\n        return this._scrollElement === window ?\n            window.innerHeight :\n            this._scrollElement.getBoundingClientRect().height\n    }\n\n    _process() {\n        const scrollTop = this._getScrollTop() + this._config.offset\n        const scrollHeight = this._getScrollHeight()\n        const maxScroll = this._config.offset +\n            scrollHeight -\n            this._getOffsetHeight()\n\n        if (this._scrollHeight !== scrollHeight) {\n            this.refresh()\n        }\n\n        if (scrollTop >= maxScroll) {\n            const target = this._targets[this._targets.length - 1]\n\n            if (this._activeTarget !== target) {\n                this._activate(target)\n            }\n\n            return\n        }\n\n        if (this._activeTarget && scrollTop < this._offsets[0] && this._offsets[0] > 0) {\n            this._activeTarget = null\n            this._clear()\n            return\n        }\n\n        const offsetLength = this._offsets.length\n        for (let i = offsetLength; i--;) {\n            const isActiveTarget = this._activeTarget !== this._targets[i] &&\n                scrollTop >= this._offsets[i] &&\n                (typeof this._offsets[i + 1] === 'undefined' ||\n                    scrollTop < this._offsets[i + 1])\n\n            if (isActiveTarget) {\n                this._activate(this._targets[i])\n            }\n        }\n    }\n\n    _activate(target) {\n        this._activeTarget = target\n\n        this._clear()\n\n        const queries = this._selector.split(',')\n            .map(selector => `${selector}[data-target=\"${target}\"],${selector}[href=\"${target}\"]`)\n\n        const link = SelectorEngine.findOne(queries.join(','))\n\n        if (link.classList.contains(ClassName.DROPDOWN_ITEM)) {\n            SelectorEngine\n                .findOne(Selector.DROPDOWN_TOGGLE, SelectorEngine.closest(link, Selector.DROPDOWN))\n                .classList.add(ClassName.ACTIVE)\n\n            link.classList.add(ClassName.ACTIVE)\n        } else {\n            // Set triggered link as active\n            link.classList.add(ClassName.ACTIVE)\n\n            SelectorEngine\n                .parents(link, Selector.NAV_LIST_GROUP)\n                .forEach(listGroup => {\n                    // Set triggered links parents as active\n                    // With both <ul> and <nav> markup a parent is the previous sibling of any nav ancestor\n                    SelectorEngine.prev(listGroup, `${Selector.NAV_LINKS}, ${Selector.LIST_ITEMS}`)\n                        .forEach(item => item.classList.add(ClassName.ACTIVE))\n\n                    // Handle special case when .nav-link is inside .nav-item\n                    SelectorEngine.prev(listGroup, Selector.NAV_ITEMS)\n                        .forEach(navItem => {\n                            SelectorEngine.children(navItem, Selector.NAV_LINKS)\n                                .forEach(item => item.classList.add(ClassName.ACTIVE))\n                        })\n                })\n        }\n\n        EventHandler.trigger(this._scrollElement, Event.ACTIVATE, {\n            relatedTarget: target\n        })\n    }\n\n    _clear() {\n        makeArray(SelectorEngine.find(this._selector))\n            .filter(node => node.classList.contains(ClassName.ACTIVE))\n            .forEach(node => node.classList.remove(ClassName.ACTIVE))\n    }\n\n    // Static\n\n    static jQueryInterface(config) {\n        return this.each(function() {\n            let data = Data.getData(this, DATA_KEY)\n            const _config = typeof config === 'object' && config\n\n            if (!data) {\n                data = new ScrollSpy(this, _config)\n            }\n\n            if (typeof config === 'string') {\n                if (typeof data[config] === 'undefined') {\n                    throw new TypeError(`No method named \"${config}\"`)\n                }\n\n                data[config]()\n            }\n        })\n    }\n\n    static getInstance(element) {\n        return Data.getData(element, DATA_KEY)\n    }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\nEventHandler.on(window, Event.LOAD_DATA_API, () => {\n    makeArray(SelectorEngine.find(Selector.DATA_SPY))\n        .forEach(spy => new ScrollSpy(spy, Manipulator.getDataAttributes(spy)))\n})\n\nconst $ = getjQuery()\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n/* istanbul ignore if */\nif ($) {\n    const JQUERY_NO_CONFLICT = $.fn[NAME]\n    $.fn[NAME] = ScrollSpy.jQueryInterface\n    $.fn[NAME].Constructor = ScrollSpy\n    $.fn[NAME].noConflict = () => {\n        $.fn[NAME] = JQUERY_NO_CONFLICT\n        return ScrollSpy.jQueryInterface\n    }\n}\n\nexport default ScrollSpy"],"names":["MAX_UID","toType","obj","toString","call","match","toLowerCase","getUID","prefix","Math","random","document","getElementById","getSelector","element","selector","getAttribute","hrefAttr","trim","getSelectorFromElement","querySelector","isElement","nodeType","typeCheckConfig","componentName","config","configTypes","Object","keys","forEach","property","expectedTypes","value","valueType","RegExp","test","Error","toUpperCase","makeArray","nodeList","slice","getjQuery","window","jQuery","body","hasAttribute","NAME","VERSION","DATA_KEY","EVENT_KEY","DATA_API_KEY","Default","offset","method","target","DefaultType","Event","ACTIVATE","SCROLL","LOAD_DATA_API","ClassName","DROPDOWN_ITEM","ACTIVE","Selector","DATA_SPY","NAV_LIST_GROUP","NAV_LINKS","NAV_ITEMS","LIST_ITEMS","DROPDOWN","DROPDOWN_TOGGLE","OffsetMethod","OFFSET","POSITION","ScrollSpy","_element","_scrollElement","tagName","_config","_getConfig","_selector","_offsets","_targets","_activeTarget","_scrollHeight","EventHandler","on","event","_process","refresh","Data","setData","autoMethod","offsetMethod","offsetBase","_getScrollTop","_getScrollHeight","targets","SelectorEngine","find","map","targetSelector","findOne","targetBCR","getBoundingClientRect","width","height","Manipulator","top","filter","item","sort","a","b","push","dispose","removeData","off","id","pageYOffset","scrollTop","scrollHeight","max","documentElement","_getOffsetHeight","innerHeight","maxScroll","length","_activate","_clear","offsetLength","i","isActiveTarget","queries","split","link","join","classList","contains","closest","add","parents","listGroup","prev","navItem","children","trigger","relatedTarget","node","remove","jQueryInterface","each","data","getData","TypeError","getInstance","spy","getDataAttributes","$","JQUERY_NO_CONFLICT","fn","Constructor","noConflict"],"mappings":"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"}